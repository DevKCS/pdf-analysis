<% if(!user){ %>
    <!DOCTYPE html>
    <html lang="en" >
    <head>
        <meta charset="UTF-8">
        <title>재무제표 분석기 - 로그인</title>

    </head>

    <body>
    <!-- partial:index.partial.html -->
    <hgroup>
        <h1>재무제표 분석기</h1>
    </hgroup>
    <style>
        * { box-sizing:border-box; }

        body {
            font-family: Helvetica;
            background: #eee;
            -webkit-font-smoothing: antialiased;
        }

        hgroup {
            text-align:center;
            margin-top: 4em;
        }

        h1, h3 { font-weight: 300; }

        h1 { color: #636363; }

        h3 { color: #4a89dc; }

        form {
            width: 380px;
            margin: 4em auto;
            padding: 3em 2em 2em 2em;
            background: #fafafa;
            border: 1px solid #ebebeb;
            box-shadow: rgba(0,0,0,0.14902) 0px 1px 1px 0px,rgba(0,0,0,0.09804) 0px 1px 2px 0px;
        }

        .group {
            position: relative;
            margin-bottom: 45px;
        }

        input {
            font-size: 18px;
            padding: 10px 10px 10px 5px;
            -webkit-appearance: none;
            display: block;
            background: #fafafa;
            color: #636363;
            width: 100%;
            border: none;
            border-radius: 0;
            border-bottom: 1px solid #757575;
        }

        input:focus { outline: none; }


        /* Label */

        label {
            color: #999;
            font-size: 18px;
            font-weight: normal;
            position: absolute;
            pointer-events: none;
            left: 5px;
            top: 10px;
            transition: all 0.2s ease;
        }


        /* active */

        input:focus ~ label, input.used ~ label {
            top: -20px;
            transform: scale(.75); left: -2px;
            /* font-size: 14px; */
            color: #4a89dc;
        }


        /* Underline */

        .bar {
            position: relative;
            display: block;
            width: 100%;
        }

        .bar:before, .bar:after {
            content: '';
            height: 2px;
            width: 0;
            bottom: 1px;
            position: absolute;
            background: #4a89dc;
            transition: all 0.2s ease;
        }

        .bar:before { left: 50%; }

        .bar:after { right: 50%; }


        /* active */

        input:focus ~ .bar:before, input:focus ~ .bar:after { width: 50%; }


        /* Highlight */

        .highlight {
            position: absolute;
            height: 60%;
            width: 100px;
            top: 25%;
            left: 0;
            pointer-events: none;
            opacity: 0.5;
        }


        /* active */

        input:focus ~ .highlight {
            -webkit-animation: inputHighlighter 0.3s ease;
            animation: inputHighlighter 0.3s ease;
        }


        /* Animations */

        @-webkit-keyframes inputHighlighter {
            from { background: #4a89dc; }
            to 	{ width: 0; background: transparent; }
        }

        @keyframes inputHighlighter {
            from { background: #4a89dc; }
            to 	{ width: 0; background: transparent; }
        }


        /* Button */

        .button {
            position: relative;
            display: inline-block;
            padding: 12px 24px;
            margin: .3em 0 1em 0;
            width: 100%;
            vertical-align: middle;
            color: #fff;
            font-size: 16px;
            line-height: 20px;
            -webkit-font-smoothing: antialiased;
            text-align: center;
            letter-spacing: 1px;
            background: transparent;
            border: 0;
            border-bottom: 2px solid #3160B6;
            cursor: pointer;
            transition: all 0.15s ease;
        }
        .button:focus { outline: 0; }


        /* Button modifiers */

        .buttonBlue {
            background: #4a89dc;
            text-shadow: 1px 1px 0 rgba(39, 110, 204, .5);
        }

        .buttonBlue:hover { background: #357bd8; }


        /* Ripples container */

        .ripples {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            background: transparent;
        }


        /* Ripples circle */

        .ripplesCircle {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.25);
        }

        .ripples.is-active .ripplesCircle {
            -webkit-animation: ripples .4s ease-in;
            animation: ripples .4s ease-in;
        }


        /* Ripples animation */

        @-webkit-keyframes ripples {
            0% { opacity: 0; }

            25% { opacity: 1; }

            100% {
                width: 200%;
                padding-bottom: 200%;
                opacity: 0;
            }
        }

        @keyframes ripples {
            0% { opacity: 0; }

            25% { opacity: 1; }

            100% {
                width: 200%;
                padding-bottom: 200%;
                opacity: 0;
            }
        }

        footer { text-align: center; }

        footer p {
            color: #888;
            font-size: 13px;
            letter-spacing: .4px;
        }

        footer a {
            color: #4a89dc;
            text-decoration: none;
            transition: all .2s ease;
        }

        footer a:hover {
            color: #666;
            text-decoration: underline;
        }

        footer img {
            width: 80px;
            transition: all .2s ease;
        }

        footer img:hover { opacity: .83; }

        footer img:focus , footer a:focus { outline: none; }
    </style>
    <script>
        function login() {
            var password = document.getElementById("password").value;
            location.href = "http://34.22.72.47:3000/login?pw=" + password;
        }

    </script>
    <form>
        <div class="group">
            <input type="email" id="password"><span class="highlight"></span><span class="bar"></span>
            <label>비밀번호</label>
        </div>
        <button type="button" class="button buttonBlue" onclick="login()">로그인
            <div class="ripples buttonRipples"><span class="ripplesCircle"></span></div>
        </button>
    </form>
    <footer><img src="https://www.polymer-project.org/images/logos/p-logo.svg"></a>
        <p>Contents Copyrightⓒ 2023 weLim</p>
    </footer>
    <!-- partial -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>

    </body>
    </html>
<% } else { %>
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
        <title>Untitled</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css">
        <script>
            function handleFileSelect(event) {
            }
        </script>
        <script>

            function numberFormat(x) {
                return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

            function numberToKorean(number) {
                let e = '';
                if (number < 0) {
                    number = Math.abs(number);
                    e = '-'
                }
                var inputNumber = number < 0 ? false : number;
                var unitWords = ['', '만', '억', '조', '경'];
                var splitUnit = 10000;
                var splitCount = unitWords.length;
                var resultArray = [];
                var resultString = '';

                for (var i = 0; i < splitCount; i++) {
                    let unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);
                    unitResult = Math.floor(unitResult);
                    if (unitResult > 0) {
                        resultArray[i] = unitResult;
                    }
                }

                for (var i = 0; i < resultArray.length; i++) {
                    if (!resultArray[i]) continue;
                    resultString = String(numberFormat(resultArray[i])) + unitWords[i] + resultString;
                }
                if (number === 0) resultString = "0"

                return e + resultString;
            }
            function downloadPDF(id) {
                // 서버에서 파일을 다운로드하는 로직 작성
                var fileURL = '/' + id + '.pdf';
                var fileName = '보고서.pdf';

                var a = document.createElement('a');
                a.href = fileURL;
                a.download = fileName;
                a.style.display = 'none';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
            }
            function uuidv4() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    var r = Math.random() * 16 | 0,
                        v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
            function uploadPDF() {
                const startButton = document.getElementById("startButton");
                startButton.disabled = true;
                const input = document.getElementById('pdfFile');
                const input2 = document.getElementById('pdfFile2');
                if (input.files.length + input2.files.length > 2) {
                    alert('파일은 최대 2개까지 선택할 수 있습니다.');
                    input.value = ''; // 파일 선택 input 초기화
                    return;
                }
                if(input.files.length + input2.files.length == 1) {
                    const result1 = document.getElementById('result1');
                    result1.innerHTML = input.files[0].name+" 파일을 분석 중입니다...";
                    const result2 = document.getElementById('result2');
                    result2.innerHTML = "";
                    const result3 = document.getElementById('result3');
                    result3.innerHTML = "";
                    const result4 = document.getElementById('result4');
                    result4.innerHTML = "";
                    const compareRes = document.getElementById('compare-pane');
                    compareRes.innerHTML = "";
                }
                if(input.files.length + input2.files.length == 2) {
                    const result1 = document.getElementById('result1');
                    result1.innerHTML = input.files[0].name+" 파일을 분석 중입니다...";
                    const result2 = document.getElementById('result2');
                    result2.innerHTML = "";
                    const result3 = document.getElementById('result3');
                    result3.innerHTML = input2.files[0].name+" 파일을 분석 중입니다...";
                    const result4 = document.getElementById('result4');
                    result4.innerHTML = "";
                    const compareRes = document.getElementById('compare-pane');
                    compareRes.innerHTML = "";
                }
                const formData = new FormData();
                if(input.files.length + input2.files.length == 2) {
                    formData.append('pdf', input.files[0]);
                    formData.append('pdf', input2.files[0]);
                } else if(input.files.length + input2.files.length == 1) {
                    formData.append('pdf', input.files[0]);
                } else {
                    alert('파일을 선택해주세요.');
                    startButton.disabled = false;
                    return;
                }
                // 서버 업로드 URL
                const url = 'http://34.22.72.47:3000/upload'; // 실제 서버 URL로 변경해야 합니다.
                // XMLHttpRequest를 사용하여 파일 업로드 요청
                const xhr = new XMLHttpRequest();
                xhr.open('POST', url, true);
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                        if(xhr.status === 400) {
                            const result1 = document.getElementById('result1');
                            result1.innerHTML = "파일을 선택해주세요.";
                            const result2 = document.getElementById('result2');
                            result2.innerHTML = "";
                            const result3 = document.getElementById('result3');
                            result3.innerHTML = "";
                            const result4 = document.getElementById('result4');
                            result4.innerHTML = "";
                            const compareRes = document.getElementById('compare-pane');
                            compareRes.innerHTML = "";
                            startButton.disabled = false;
                            return;
                        }
                        if(xhr.status === 500) {
                            if(files.length == 1) {
                                const result1 = document.getElementById('result1');
                                result1.innerHTML = input.files[0].name+" 파일분석에 실패하였습니다.";
                                const result2 = document.getElementById('result2');
                                result2.innerHTML = "";
                                const result3 = document.getElementById('result3');
                                result3.innerHTML = "";
                                const result4 = document.getElementById('result4');
                                result4.innerHTML = "";
                                const compareRes = document.getElementById('compare-pane');
                                compareRes.innerHTML = "";
                            }
                            if(files.length == 2) {
                                const result1 = document.getElementById('result1');
                                result1.innerHTML = input.files[0].name+" 파일분석에 실패하였습니다.";
                                const result2 = document.getElementById('result2');
                                result2.innerHTML = "";
                                const result3 = document.getElementById('result3');
                                result3.innerHTML = input2.files[0].name+" 파일분석에 실패하였습니다.";
                                const result4 = document.getElementById('result4');
                                result4.innerHTML = "";
                                const compareRes = document.getElementById('compare-pane');
                                compareRes.innerHTML = "";
                            }
                            startButton.disabled = false;
                            return;
                        }
                        if (xhr.status === 200) {
                            if(JSON.parse(xhr.responseText).length == 1) {
                                const responseJson = JSON.parse(xhr.responseText)[0]
                                const result1 = document.getElementById('result1');
                                result1.innerHTML = "[ "+input.files[0].name+" 파일 분석 결과 ]<br/>"+responseJson.재무제표.replace(/\n/g, '<br/>');
                                if(responseJson.resultJson.부채비율 >= 50) {
                                    result1.innerHTML += "<br/><br/>[ 예상 대출액 평가 ] <br/>대출 가능여부 : 불가능";
                                    responseJson["대출예상"] = "대출 가능여부 : 불가능"
                                    responseJson["대출예상액"] = ""
                                } else {
                                    let n = (Number(responseJson.resultJson['매출액'])*0.4)-Number(responseJson.resultJson['장기차입금'])
                                    if(n > 300000000) n = 300000000;
                                    result1.innerHTML += "<br/><br/>[ 예상 대출액 평가 ] <br/>대출 가능여부 : 가능<br/>예상 대출액 : "+numberToKorean(n)+'원';
                                    responseJson["대출예상"] = "대출 가능여부 : 가능"
                                    responseJson["대출예상액"] = "예상 대출액 : "+numberToKorean(n)+'원'
                                }
                                responseJson.name = input.files[0].name;
                                let createlaboratory = '<br/><br/>[ 연구소 설립시 혜택]<br/>'
                                let pdf1 = responseJson
                                createlaboratory += "당사의 당기순이익 "+numberToKorean(Number(pdf1.resultJson['장기차입금']))+'원'+"의 추정 납부 세금은 "+numberToKorean(Number(pdf1.resultJson['세금']))+'원'+"이라고 가정한다.<br/>"
                                createlaboratory += `연구소를 설립하여 "2명"의 연구원의 임금을 1년 "35,000,000원"으로 책정했을 경우,<br/>연구원 투입 임금의 25%가 세액공제 된다.\n즉, 35,000,000원 x 2명 x 25% = 17,500,000원의 세액이 절감 된다.<br/>${numberToKorean(Number(pdf1.resultJson['세금']))} - 17,500,000원 = ${Number(pdf1.resultJson['세금']) - 17500000 < 0 ? 35000 : Number(pdf1.resultJson['세금']) - 17500000}원이다.`
                                result1.innerHTML += createlaboratory
                                const result2 = document.getElementById('result2');
                                result2.innerHTML = "[ AI 분석결과 ]<br/>"+responseJson["AI"].replace(/\n/g, '<br/>');
                                axios.post('http://34.22.72.47:3000/makePdf1',{pdf1:responseJson,id:uuidv4()}).then((e) => {
                                    downloadPDF(e.data)
                                    startButton.disabled = false;
                                    input.value = ''
                                    input2.value = ''
                                })
                            }else if(JSON.parse(xhr.responseText).length == 2) {
                                const responseJson = JSON.parse(xhr.responseText)[0]
                                const result1 = document.getElementById('result1');
                                result1.innerHTML = "[ "+input.files[0].name+" 파일 분석 결과 ]<br/>"+responseJson.재무제표.replace(/\n/g, '<br/>');
                                const result2 = document.getElementById('result2');
                                result2.innerHTML = "[ AI 분석결과 ]<br/>"+responseJson["AI"].replace(/\n/g, '<br/>');
                                const responseJson_ = JSON.parse(xhr.responseText)[1]
                                const result1_ = document.getElementById('result3');
                                result1_.innerHTML ="[ "+input2.files[0].name+" 파일 분석 결과 ]<br/>"+ responseJson_.재무제표.replace(/\n/g, '<br/>');
                                const result2_ = document.getElementById('result4');
                                result2_.innerHTML = "[ AI 분석결과 ]<br/>"+responseJson_["AI"].replace(/\n/g, '<br/>');
                                if(responseJson_.resultJson.부채비율 >= 50) {
                                    result1_.innerHTML += "<br/>대출 가능여부 : 불가능";
                                } else {
                                    const decreasePercentage = ((responseJson.resultJson.자본총액 - responseJson_.resultJson.자본총액) / responseJson.resultJson.자본총액) * 100;
                                    if (decreasePercentage > 0) {
                                        result1_.innerHTML += "<br/>대출 가능여부 : 불가능";
                                    } else {
                                        result1_.innerHTML += "<br/>대출 가능여부 : 가능여부 상급자 체크 ";
                                    }
                                }
                                result2_.innerHTML += "<br/><br/>[ 일반 비교결과 ]<br/>"+input.files[0].name+"대비 "+input2.files[0].name+"의 비교결과입니다.<br/>";
                                let v1 = responseJson.resultJson;
                                let v2 = responseJson_.resultJson;
                                // 매출액 비교
                                const salesChange = v2['매출액'] - v1['매출액'];
                                const salesPercentChange = ((salesChange / v1['매출액']) * 100).toFixed(2);
                                let salesChangeText = '';
                                if (salesChange > 0) {
                                    salesChangeText = `매출액이 ${Math.abs(salesChange).toLocaleString()}원 증가하였습니다 (${salesPercentChange}%)`;
                                } else if (salesChange < 0) {
                                    salesChangeText = `매출액이 ${Math.abs(salesChange).toLocaleString()}원 감소하였습니다 (${salesPercentChange}%)`;
                                } else {
                                    salesChangeText = '매출액 변동이 없습니다.';
                                }

                                // 당기순이익 비교
                                const profitChange = v2['당기순이익'] - v1['당기순이익'];
                                const profitPercentChange = ((profitChange / v1['당기순이익']) * 100).toFixed(2);
                                let profitChangeText = '';
                                if (profitChange > 0) {
                                    profitChangeText = `당기순이익이 ${Math.abs(profitChange).toLocaleString()}원 증가하였습니다 (${profitPercentChange}%)`;
                                } else if (profitChange < 0) {
                                    profitChangeText = `당기순이익이 ${Math.abs(profitChange).toLocaleString()}원 감소하였습니다 (${profitPercentChange}%)`;
                                } else {
                                    profitChangeText = '당기순이익 변동이 없습니다.';
                                }

                                // 부채비율 비교
                                const debtRatioChange = parseFloat(v2['부채비율']) - parseFloat(v1['부채비율']);
                                const debtRatioPercentChange = ((debtRatioChange / parseFloat(v1['부채비율'])) * 100).toFixed(2);
                                let debtRatioChangeText = '';
                                if (debtRatioChange > 0) {
                                    debtRatioChangeText = `부채비율이 ${Math.abs(debtRatioChange).toFixed(2)}% 증가하였습니다 (${debtRatioPercentChange}%)`;
                                } else if (debtRatioChange < 0) {
                                    debtRatioChangeText = `부채비율이 ${Math.abs(debtRatioChange).toFixed(2)}% 감소하였습니다 (${debtRatioPercentChange}%)`;
                                } else {
                                    debtRatioChangeText = '부채비율 변동이 없습니다.';
                                }

                                // 자본총액 비교
                                const capitalChange = v2['자본총액'] - v1['자본총액'];
                                const capitalPercentChange = ((capitalChange / v1['자본총액']) * 100).toFixed(2);
                                let capitalChangeText = '';
                                if (capitalChange > 0) {
                                    capitalChangeText = `자본총액이 ${Math.abs(capitalChange).toLocaleString()}원 증가하였습니다 (${capitalPercentChange}%)`;
                                } else if (capitalChange < 0) {
                                    capitalChangeText = `자본총액이 ${Math.abs(capitalChange).toLocaleString()}원 감소하였습니다 (${capitalPercentChange}%)`;
                                } else {
                                    capitalChangeText = '자본총액 변동이 없습니다.';
                                }
                                result2_.innerHTML += salesChangeText+"<br/>"+profitChangeText+"<br/>"+debtRatioChangeText+"<br/>"+capitalChangeText;
                                const compareRes = document.getElementById('compare-pane');
                                compareRes.innerHTML = `
                            <div class="bg-light border rounded border-light jumbotron py-5 px-4" id="loading2">
                                <p id="compare">AI가 두 재무제표 파일을 비교 분석중입니다...</p>
                            </div>`
                                axios.post('http://34.22.72.47:3000/compare',{
                                    pdf1:responseJson.재무제표,
                                    pdf2:responseJson_.재무제표
                                }).then(function (response) {
                                    const responseJson2 = response.data
                                    const compareRes = document.getElementById('compare');
                                    compareRes.innerHTML = "[ AI 비교결과 ]<br/>"+responseJson2["result"].replace(/\n/g, '<br/>');
                                    responseJson.name = input.files[0].name;
                                    responseJson_.name = input2.files[0].name;
                                    axios.post('http://34.22.72.47:3000/makePdf2',{pdf1:responseJson,pdf2:responseJson_,id:uuidv4(),compare:responseJson2["result"],compareDef:salesChangeText+"\n"+profitChangeText+"\n"+debtRatioChangeText+"\n"+capitalChangeText}).then((e) => {
                                        downloadPDF(e.data)
                                        input.value = ''
                                        input2.value = ''
                                        startButton.disabled = false;
                                    })
                                }).catch(function (error) {
                                    console.log(error);
                                });
                            }
                        } else {
                            // 업로드 실패 시 동작할 코드
                            console.log('파일 업로드 실패');
                        }
                    }
                };
                xhr.send(formData);
            }
        </script>
    </head>

    <body>
    <div class="bg-light border rounded border-light jumbotron py-5 px-4">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">재무제표분석기</h4>
                <h6 class="text-muted card-subtitle mb-2">Ver 1.0 Alpha</h6>
                <div class="bg-light border rounded border-light jumbotron py-5 px-4" id="loading">
                    <p id="result1"></p>
                    <p id="result2"></p>
                    <p id="result3"></p>
                    <p id="result4"></p>
                </div>
                <div id="compare-pane">
                </div>
                <input type="file" id="pdfFile" accept="application/pdf" multiple onchange="handleFileSelect(event)"><br/>
                <input type="file" id="pdfFile2" accept="application/pdf" multiple onchange="handleFileSelect(event)"><br/>
                <p>분석할 재무제표 pdf파일을 선택하십시오.</p>
                <p id="target"></p>
                <button onclick="uploadPDF()" id="startButton" class="btn btn-success btn-lg">분석시작</button>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
    </body>

    </html>
<% } %>
